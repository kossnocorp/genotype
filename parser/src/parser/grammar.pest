module = { SOI ~ (module_doc)* ~ (import | alias)* ~ EOI }

alias = { line_doc* ~ name ~ "=" ~ (any_descriptor) }

name = @{ (ASCII_ALPHA)+ }

// Descriptor

any_descriptor = _{ nullable_descriptor | descriptor  }

descriptor = !{ primitive | object | array | alias | name | inline_reference }

nullable_descriptor = ${ descriptor ~ "?" }

primitive = { "string" | "int" | "float" | "boolean" }

// Object

object = { "{" ~ properties? ~ "}" }

properties = _{ any_property ~ (","? ~ any_property)* ~ ","? }

any_property = _{ optional_property | required_property }

required_property = { line_doc* ~ name ~ ":" ~ any_descriptor }

optional_property = { line_doc* ~ name ~ "?:" ~ any_descriptor }

// Array

array = { "[" ~ any_descriptor ~ "]" }

// Modules

import = { "use" ~ import_reference }

import_reference = @{ path ~ (import_glob | import_names | name)}

import_names = !{ "{" ~ (import_name ~ ("," ~ import_name)*)? ~ "}" }

import_name = { name ~ ("as" ~ name)? }

import_glob = @{ "*" }

inline_reference = @{ path ~ name }

path = @{ path_segment+ }

path_segment = ${ "../" | "./" | ((!"/" ~ !NEWLINE ~ ANY)+ ~ "/") }

// Comments

line_comment = _{ ("//" ~ !("/" | "!") ~ (!NEWLINE ~ ANY)*) }

block_comment = _{ "/*" ~ (block_comment | !"*/" ~ ANY)* ~ "*/" }

module_doc = ${ "//!" ~ SPACE? ~ doc }

line_doc = ${ "///" ~ SPACE? ~ doc }

doc= @{ (!NEWLINE ~ ANY)* }

// Base

SPACE = _{ " " | "\t" }

WHITESPACE = _{ SPACE | NEWLINE }

COMMENT = _{ line_comment | block_comment }