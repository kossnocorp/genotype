{
  "fileTypes": ["type"],
  "name": "Genotype",
  "scopeName": "source.genotype",
  "patterns": [
    {
      "include": "#moduleDoc"
    },
    {
      "include": "#lineDoc"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#imports"
    },
    {
      "include": "#alias"
    }
  ],
  "repository": {
    "alias": {
      "patterns": [
        {
          "begin": "^\\s*(\\b[A-Za-z][A-Za-z0-9]*\\b)\\s*(=)",
          "end": "(?=$)",
          "name": "meta.alias.genotype",
          "patterns": [
            {
              "include": "#descriptor"
            },
            {
              "include": "#comments"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "entity.name.type.alias.genotype"
            },
            "2": {
              "name": "keyword.operator.assignment.genotype"
            }
          }
        }
      ]
    },
    "array": {
      "begin": "\\[",
      "end": "\\]",
      "name": "meta.array.genotype",
      "patterns": [
        {
          "include": "#descriptor"
        },
        {
          "include": "#comments"
        }
      ],
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.brackets.begin.genotype"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.section.brackets.end.genotype"
        }
      }
    },
    "comments": {
      "patterns": [
        {
          "include": "#lineDoc"
        },
        {
          "match": "^\\s*//[^/!].*$",
          "name": "comment.line.double-slash.genotype"
        },
        {
          "begin": "/\\*",
          "end": "\\*/",
          "name": "comment.block.genotype",
          "patterns": [
            {
              "include": "#comments"
            }
          ]
        }
      ]
    },
    "descriptor": {
      "patterns": [
        {
          "include": "#primitive"
        },
        {
          "include": "#nullableOperator"
        },
        {
          "include": "#object"
        },
        {
          "include": "#array"
        },
        {
          "include": "#tuple"
        },
        {
          "include": "#inlineImport"
        },
        {
          "include": "#identifier"
        },
        {
          "include": "#comments"
        }
      ]
    },
    "identifier": {
      "match": "\\b(?!as\\b|string\\b|int\\b|float\\b|boolean\\b)[A-Za-z][A-Za-z0-9]*\\b",
      "name": "entity.name.type.genotype"
    },
    "importReference": {
      "patterns": [
        {
          "match": "\\*",
          "name": "keyword.operator.glob.genotype"
        },
        {
          "begin": "\\{",
          "end": "\\}",
          "name": "meta.import.names.genotype",
          "patterns": [
            {
              "match": "\\b(?!as\\b)([A-Za-z][A-Za-z0-9]*)\\b\\s*(as)\\s*\\b([A-Za-z][A-Za-z0-9]*)\\b",
              "name": "meta.aliased.type.genotype",
              "captures": {
                "1": {
                  "name": "meta.aliased.type.genotype"
                },
                "2": {
                  "name": "keyword.control.import.alias.genotype"
                },
                "3": {
                  "name": "entity.name.type.alias.genotype"
                }
              }
            },
            {
              "match": "\\b(?!as\\b)([A-Za-z][A-Za-z0-9]*)\\b",
              "name": "meta.definition.type.genotype",
              "captures": {
                "1": {
                  "name": "entity.name.type.genotype"
                }
              }
            },
            {
              "match": ",",
              "name": "punctuation.separator.comma.genotype"
            },
            {
              "include": "#comments"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "punctuation.section.block.begin.genotype"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.section.block.end.genotype"
            }
          }
        },
        {
          "match": "\\b(?!as\\b)([A-Za-z][A-Za-z0-9]*)\\b",
          "name": "meta.definition.type.genotype",
          "captures": {
            "1": {
              "name": "entity.name.type.genotype"
            }
          }
        }
      ]
    },
    "imports": {
      "patterns": [
        {
          "begin": "^\\s*(use)\\b",
          "end": "(?=$)",
          "name": "meta.import.genotype",
          "patterns": [
            {
              "include": "#path"
            },
            {
              "include": "#importReference"
            },
            {
              "include": "#comments"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "keyword.control.import.genotype"
            }
          }
        }
      ]
    },
    "inlineImport": {
      "match": "((?:\\.\\./|\\./|[^/\\s]+/)+)([A-Za-z][A-Za-z0-9]*)",
      "name": "meta.inline-import.genotype",
      "captures": {
        "1": {
          "name": "entity.name.import.path.genotype"
        },
        "2": {
          "name": "entity.name.type.genotype"
        }
      }
    },
    "lineDoc": {
      "patterns": [
        {
          "match": "^\\s*///.*$",
          "name": "comment.line.documentation.genotype"
        }
      ]
    },
    "moduleDoc": {
      "patterns": [
        {
          "match": "^\\s*//!.*$",
          "name": "comment.block.documentation.genotype"
        }
      ]
    },
    "nullableOperator": {
      "match": "\\?",
      "name": "keyword.operator.nullable.genotype"
    },
    "object": {
      "begin": "\\{",
      "end": "\\}",
      "name": "meta.object.genotype",
      "patterns": [
        {
          "include": "#properties"
        },
        {
          "include": "#comments"
        }
      ],
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.block.begin.genotype"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.section.block.end.genotype"
        }
      }
    },
    "path": {
      "patterns": [
        {
          "match": "((?:\\.\\./|\\./|[^/\\s]+/)+)",
          "name": "string.path.genotype"
        }
      ]
    },
    "primitive": {
      "match": "\\b(string|int|float|boolean)\\b",
      "name": "storage.type.primitive.genotype"
    },
    "properties": {
      "patterns": [
        {
          "include": "#lineDoc"
        },
        {
          "include": "#property"
        },
        {
          "match": ",",
          "name": "punctuation.separator.comma.genotype"
        },
        {
          "include": "#comments"
        }
      ]
    },
    "property": {
      "patterns": [
        {
          "begin": "\\s*(\\b[A-Za-z][A-Za-z0-9]*\\b)(\\??)(:|\\?:)",
          "end": "(?=,|\\}|$)",
          "name": "meta.property.genotype",
          "patterns": [
            {
              "include": "#descriptor"
            },
            {
              "include": "#comments"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "variable.other.property.genotype"
            },
            "2": {
              "name": "keyword.operator.optional.genotype"
            },
            "3": {
              "name": "punctuation.separator.key-value.genotype"
            }
          }
        }
      ]
    },
    "tuple": {
      "begin": "\\(",
      "end": "\\)",
      "name": "meta.tuple.genotype",
      "patterns": [
        {
          "include": "#descriptor"
        },
        {
          "match": ",",
          "name": "punctuation.separator.comma.genotype"
        },
        {
          "include": "#comments"
        }
      ],
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.group.begin.genotype"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.section.group.end.genotype"
        }
      }
    }
  }
}
